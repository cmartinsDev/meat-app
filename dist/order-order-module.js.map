{"version":3,"sources":["webpack:///./src/app/order/delivery-costs/delivery-costs.component.html","webpack:///./src/app/order/delivery-costs/delivery-costs.component.ts","webpack:///./src/app/order/order-items/order-items.component.html","webpack:///./src/app/order/order-items/order-items.component.ts","webpack:///./src/app/order/order.component.html","webpack:///./src/app/order/order.component.ts","webpack:///./src/app/order/order.model.ts","webpack:///./src/app/order/order.module.ts"],"names":[],"mappings":";;;;;;;;;AAAA,wLAAwL,wCAAwC,4FAA4F,sCAAsC,4FAA4F,qCAAqC,qD;;;;;;;;;;;;;;;;;;;;;;;;ACA1a;AAMzD;IAIE;IAAgB,CAAC;IAEjB,yCAAQ,GAAR;IACA,CAAC;IAED,sCAAK,GAAL;QACE,MAAM,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC;IACzC,CAAC;IAVQ;QAAR,2DAAK,EAAE;;4DAAkB;IACjB;QAAR,2DAAK,EAAE;;8DAAoB;IAFjB,sBAAsB;QAJlC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;SAE9B,CAAC;;OACW,sBAAsB,CAalC;IAAD,6BAAC;CAAA;AAbkC;;;;;;;;;;;;ACNnC,8uBAA8uB,eAAe,qIAAqI,oBAAoB,qBAAqB,2BAA2B,0CAA0C,0CAA0C,iN;;;;;;;;;;;;;;;;;;;;;;;;ACA38B;AAO/E;IAME;QAJU,eAAU,GAAI,IAAI,0DAAY,EAAY;QAC1C,gBAAW,GAAG,IAAI,0DAAY,EAAY;QAC1C,WAAM,GAAG,IAAI,0DAAY,EAAY;IAE/B,CAAC;IAEjB,sCAAQ,GAAR;IACA,CAAC;IAED,6CAAe,GAAf,UAAgB,IAAc;QAC5B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED,6CAAe,GAAf,UAAgB,IAAc;QAC5B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAED,wCAAU,GAAV,UAAW,IAAc;QACvB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACzB,CAAC;IApBQ;QAAR,2DAAK,EAAE;;sDAAmB;IACjB;QAAT,4DAAM,EAAE;;2DAA2C;IAC1C;QAAT,4DAAM,EAAE;;4DAA2C;IAC1C;QAAT,4DAAM,EAAE;;uDAAsC;IAJpC,mBAAmB;QAJ/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;SAE3B,CAAC;;OACW,mBAAmB,CAuB/B;IAAD,0BAAC;CAAA;AAvB+B;;;;;;;;;;;;ACPhC,sKAAsK,YAAY,QAAQ,oBAAoB,29H;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5J;AAEH;AAEE;AACR;AAEzC,iBAAiB;AACiF;AAC7D;AAMrC;IAcE,wBAAoB,YAA0B,EAC1B,MAAc,EACd,WAAwB;QAFxB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QAf5C,UAAU;QACV,iBAAY,GAAI,wHAAwH;QACxI,kBAAa,GAAG,UAAU;QAG1B,aAAQ,GAAU,CAAC,CAAC;QAGpB,mBAAc,GAAmB;YAC/B,EAAC,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,EAAC;YACjC,EAAC,KAAK,EAAE,kBAAkB,EAAE,KAAK,EAAE,KAAK,EAAC;YACzC,EAAC,KAAK,EAAE,iBAAiB,EAAE,KAAK,EAAE,KAAK,EAAC;SACzC;IAG+C,CAAC;uBAhBtC,cAAc;IAkBzB,iCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,wDAAS,CAAC;YAC7B,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;gBACtB,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;aAC3D,CAAC;YAEJ,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACjG,iBAAiB,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YAE5G,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACrF,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YACnG,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC;YAC7C,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SAEnE,EAAE,EAAC,UAAU,EAAE,gBAAc,CAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAC,CAAC;IAC7D,CAAC;IACD,eAAe;IACf,8CAA8C;IAC9C,0FAA0F;IAE1F,yGAAyG;IACzG,oHAAoH;IAEpH,6FAA6F;IAC7F,2GAA2G;IAC3G,qDAAqD;IACrD,yEAAyE;IAEzE,+CAA+C;IAC/C,IAAI;IAMJ,uCAAuC;IAChC,uBAAQ,GAAf,UAAgB,KAAsB;QACpC,IAAM,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACjC,IAAM,iBAAiB,GAAG,KAAK,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;QAEzD,kDAAkD;QAClD,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,SAAS;QAClB,CAAC;QACD,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,KAAK,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;YAC5C,MAAM,CAAC,EAAC,aAAa,EAAE,IAAI,EAAC;QAC9B,CAAC;QACD,MAAM,CAAC,SAAS,CAAC;IACnB,CAAC;IAED,mCAAU,GAAV;QACE,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;IACxC,CAAC;IAED,kCAAS,GAAT;QACE,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC;IACvC,CAAC;IAED,oCAAW,GAAX,UAAY,IAAc;QACxB,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC;IACrC,CAAC;IAED,oCAAW,GAAX,UAAY,IAAc;QACxB,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACtC,CAAC;IAED,+BAAM,GAAN,UAAO,IAAc;QACnB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAED,yCAAgB,GAAhB;QACE,MAAM,CAAC,IAAI,CAAC,OAAO,KAAK,SAAS,CAAC;IACpC,CAAC;IAED,mCAAU,GAAV,UAAW,KAAY;QAAvB,iBAUC;QATC,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,UAAC,IAAa,IAAK,WAAI,sDAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,EAA9C,CAA8C,CAAC;QAC1G,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,UAAC,OAAe;YAC3D,KAAI,CAAC,OAAO,GAAG,OAAO;QACxB,CAAC,CAAC,CAAC;aACF,SAAS,CAAC,UAAC,OAAe;YACzB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,6CAA6C;YACvF,OAAO,CAAC,GAAG,CAAC,uBAAqB,OAAS,CAAC,CAAC;YAC5C,KAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAtGU,cAAc;QAJ1B,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;SAErB,CAAC;yCAekC,2DAAY;YAClB,sDAAM;YACD,0DAAW;OAhBjC,cAAc,CAuG1B;IAAD,qBAAC;;CAAA;AAvG0B;;;;;;;;;;;;;ACf3B;AAAA;AAAA;AAAA;IACI,eACW,OAAe,EACf,MAAc,EACd,eAAuB,EACvB,aAAqB,EACrB,UAA4B,EAC5B,EAAW;QADX,4CAA4B;QAJ5B,YAAO,GAAP,OAAO,CAAQ;QACf,WAAM,GAAN,MAAM,CAAQ;QACd,oBAAe,GAAf,eAAe,CAAQ;QACvB,kBAAa,GAAb,aAAa,CAAQ;QACrB,eAAU,GAAV,UAAU,CAAkB;QAC5B,OAAE,GAAF,EAAE,CAAS;IAEtB,CAAC;IACL,YAAC;AAAD,CAAC;AAED;IACI,mBAAmB,QAAe,EAAS,MAAc;QAAtC,aAAQ,GAAR,QAAQ,CAAO;QAAS,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAClE,gBAAC;AAAD,CAAC;AAEyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBe;AACU;AACuB;AACS;AAC3B;AACD;AACD;AAEtD,IAAM,MAAM,GAAW;IACnB,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,+DAAc,EAAE,aAAa,EAAE,CAAC,kEAAe,CAAC,EAAC;CAC1E;AAOD;IAAA;IAEA,CAAC;IAFY,WAAW;QALvB,8DAAQ,CAAC;YACN,YAAY,EAAC,CAAE,+DAAc,EAAE,sFAAmB,EAAE,+FAAsB,CAAE;YAC5E,OAAO,EAAE,CAAE,qEAAY,EAAE,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAE;SAC3D,CAAC;OAEW,WAAW,CAEvB;IAAD,kBAAC;CAAA;AAFuB","file":"order-order-module.js","sourcesContent":["module.exports = \"<div class=\\\"table-responsive\\\">\\n  <table class=\\\"table\\\">\\n    <tbody>\\n      <tr>\\n        <th style=\\\"width:50%\\\">Itens:</th>\\n        <td class=\\\"text-right\\\">{{itemsValue | currency: 'BRL': 'symbol'}}</td>\\n      </tr>\\n      <tr>\\n        <th>Frete:</th>\\n        <td class=\\\"text-right\\\">{{delivery | currency: 'BRL': 'symbol'}}</td>\\n      </tr>\\n      <tr>\\n        <th>Total:</th>\\n        <td class=\\\"text-right\\\">{{total() | currency: 'BRL': 'symbol'}}</td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'mt-delivery-costs',\n  templateUrl: './delivery-costs.component.html'\n})\nexport class DeliveryCostsComponent implements OnInit {\n  @Input() delivery: number;\n  @Input() itemsValue: number;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  total():number {\n    return this.delivery + this.itemsValue;\n  }\n\n}\n","module.exports = \"<div class=\\\"col-xs-12\\\" *ngIf=\\\"items.length === 0\\\">\\n  <p>Não há items no seu carrinho. Que tal começar por <a [routerLink]=\\\"['/restaurants']\\\">aqui</a>?</p>\\n</div>\\n\\n<div class=\\\"col-xs-12 table-responsive\\\" *ngIf=\\\"items.length > 0\\\">\\n  <table class=\\\"table table-striped\\\">\\n    <thead>\\n      <tr>\\n        <th class=\\\"text-center\\\">Quantidade</th>\\n        <th>Item</th>\\n        <th>Descrição</th>\\n        <th class=\\\"text-right\\\">Subtotal</th>\\n        <th class=\\\"text-right\\\"></th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let item of items\\\">\\n        <td class=\\\"text-center\\\">\\n          <a (click)=\\\"emitDecreaseQty(item)\\\" class=\\\"btn btn-sm\\\"><i class=\\\"fa fa-minus\\\"></i></a>\\n          {{item.quantity}}\\n          <a (click)=\\\"emitIncreaseQty(item)\\\" class=\\\"btn btn-sm\\\"><i class=\\\"fa fa-plus\\\"></i></a>\\n        </td>\\n        <td>{{item.menuItem.name}}</td>\\n        <td>{{item.menuItem.description}}</td>\\n        <td class=\\\"text-right\\\">{{item.value() | currency: 'BRL': 'symbol'}}</td>\\n        <td class=\\\"text-right\\\">\\n          <a (click)=\\\"emitRemove(item)\\\" class=\\\"btn btn-sm danger\\\"><i class=\\\"fa fa-remove\\\"></i></a>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { CartItem } from 'app/restaurant-detail/shopping-cart/cart-item.model';\n\n@Component({\n  selector: 'mt-order-items',\n  templateUrl: './order-items.component.html'\n})\nexport class OrderItemsComponent implements OnInit {\n  @Input() items: CartItem[];\n  @Output() inceaseQty  = new EventEmitter<CartItem>()\n  @Output() decreaseQty = new EventEmitter<CartItem>()\n  @Output() remove = new EventEmitter<CartItem>()\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  emitIncreaseQty(item: CartItem) {\n    this.inceaseQty.emit(item);\n  }\n\n  emitDecreaseQty(item: CartItem) {\n    this.decreaseQty.emit(item);\n  }\n\n  emitRemove(item: CartItem) {\n    this.remove.emit(item);\n  }\n\n}\n","module.exports = \"<!--INICIO DO CONTEUDO-->\\n<section class=\\\"content-header\\\">\\n</section>\\n\\n<section class=\\\"content\\\">\\n  <section class=\\\"invoice\\\">\\n    <!-- {{form.valid}}\\n    {{form.value | json }} -->\\n    <form [formGroup]=\\\"orderForm\\\" novalidate>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <h2 class=\\\"page-header\\\">\\n            <i class=\\\"fa fa-shopping-cart\\\"></i> Finalize o seu pedido\\n          </h2>\\n        </div>\\n      </div>                \\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12 col-sm-9\\\">\\n          <p class=\\\"lead\\\">Seus Dados:</p>\\n        </div>\\n\\n        <div class=\\\"col-xs-12 col-sm-3\\\">          \\n          <span class=\\\"help-block pull-right has-error-block\\\" *ngIf=\\\"orderForm.hasError('emailNotMatch')\\\"><i class=\\\"fa fa-remove\\\"></i> E-mails não conferem</span>\\n        </div>\\n\\n        <div class=\\\"col-sm-6 col-xs-12\\\">\\n          <mt-input-container errorMessage=\\\"Campo obrigatório e com 5 caracteres\\\" label=\\\"Nome\\\">\\n            <input class=\\\"form-control\\\" formControlName=\\\"name\\\" placeholder=\\\"Nome\\\" autocomplete=\\\"off\\\" autofocus>\\n          </mt-input-container>\\n        </div>\\n\\n        <div class=\\\"col-sm-3 col-xs-6\\\">\\n          <mt-input-container errorMessage=\\\"E-mail inválido\\\" label=\\\"E-mail\\\">\\n            <input class=\\\"form-control\\\" formControlName=\\\"email\\\" placeholder=\\\"E-mail\\\" autocomplete=\\\"off\\\">\\n          </mt-input-container>\\n        </div>\\n\\n        <div class=\\\"col-sm-3 col-xs-6\\\">\\n          <mt-input-container errorMessage=\\\"E-mail inválido\\\" label=\\\"E-mail\\\">\\n            <input class=\\\"form-control\\\" formControlName=\\\"emailConfirmation\\\" placeholder=\\\"Confirmação do e-mail\\\" autocomplete=\\\"off\\\">\\n          </mt-input-container>\\n        </div>\\n\\n      </div>\\n\\n      <div class=\\\"row invoice-info\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <p class=\\\"lead\\\">Endereço de Entrega:</p>\\n        </div>\\n\\n        <div class=\\\"col-sm-6 col-xs-12\\\">\\n          <mt-input-container errorMessage=\\\"Campo obrigatório e com 5 caracteres\\\" label=\\\"Endereço\\\">\\n            <input class=\\\"form-control\\\" formControlName=\\\"address\\\" placeholder=\\\"Endereço\\\" autocomplete=\\\"off\\\">\\n          </mt-input-container>\\n        </div>\\n\\n        <div class=\\\"col-sm-3 col-xs-6\\\">\\n          <mt-input-container errorMessage=\\\"Obrigatório e somente números\\\" label=\\\"Número\\\">\\n            <input class=\\\"form-control\\\" placeholder=\\\"Número\\\" formControlName=\\\"number\\\" autocomplete=\\\"off\\\">\\n          </mt-input-container>\\n        </div>\\n\\n        <div class=\\\"col-sm-3 col-xs-6\\\">\\n          <mt-input-container>              \\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"optionalAddress\\\" placeholder=\\\"Complemento\\\" autocomplete=\\\"off\\\">\\n          </mt-input-container>          \\n        </div> <!-- /.col -->\\n      </div> <!-- /.row -->\\n\\n      <!-- Table row -->\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <p class=\\\"lead\\\">Itens do Pedido:</p>\\n        </div> <!-- /.col -->\\n        <mt-order-items [items]=\\\"cartItems()\\\" (inceaseQty)=\\\"increaseQty($event)\\\" (decreaseQty)=\\\"decreaseQty($event)\\\" (remove)=\\\"remove($event)\\\"></mt-order-items>\\n      </div> <!-- /.row -->\\n\\n      <div class=\\\"row\\\">\\n        <!-- accepted payments column -->\\n        <div class=\\\"col-sm-6 col-xs-12\\\">\\n          <p class=\\\"lead\\\">Formas de Pagamento:</p>\\n          <div class=\\\"form-group\\\">\\n            <mt-radio [options]=\\\"paymentOptions\\\" formControlName=\\\"paymentOption\\\"></mt-radio>\\n          </div>\\n        </div> <!-- /.col -->\\n        <div class=\\\"col-sm-6 col-xs-12\\\">\\n          <p class=\\\"lead\\\">Frete e Total:</p>\\n          <mt-delivery-costs [delivery]=\\\"delivery\\\" [itemsValue]=\\\"itemsValue()\\\" ></mt-delivery-costs>\\n        </div> <!-- /.col -->\\n      </div>\\n    </form>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-xs-12\\\">\\n        <button (click)=\\\"checkOrder(orderForm.value)\\\" class=\\\"btn btn-success pull-right\\\"  [disabled]=\\\"!orderForm.valid || cartItems().length === 0\\\"><i class=\\\"fa fa-credit-card\\\"></i> Concluir Pedido</button>            \\n      </div>\\n    </div>\\n  </section>\\n</section>\\n<!-- FIM DO CONTEUDO-->\"","import { Component, OnInit } from '@angular/core';\nimport { RadioOption } from 'app/shared/radio/radio-option.model';\nimport { OrderService } from './order.service';\nimport { CartItem } from 'app/restaurant-detail/shopping-cart/cart-item.model';\nimport { Order, OrderItem } from './order.model';\nimport { Router } from '@angular/router';\n\n// Reactive Forms\nimport { FormGroup, FormBuilder, Validators, AbstractControl, FormControl } from '@angular/forms';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'mt-order',\n  templateUrl: './order.component.html'\n})\nexport class OrderComponent implements OnInit {\n  // Pattern\n  emailPattern  = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\n  numberPattern = /^[0-9]*$/\n\n  orderForm: FormGroup;\n  delivery:number = 8;\n  orderId: string;\n\n  paymentOptions: RadioOption [] = [\n    {label: 'Dinheiro', value: 'MON'},\n    {label: 'Cartão de Débito', value: 'DEB'},\n    {label: 'Cartão Refeição', value: 'REF'}\n  ]\n  constructor(private orderService: OrderService,\n              private router: Router,\n              private formBuilder: FormBuilder) { }\n\n  ngOnInit() { // Atualização de formulario - Usando efeito blur\n    this.orderForm = new FormGroup({\n      name: new FormControl('', {\n          validators: [Validators.required, Validators.minLength(5)]\n        }),\n      \n      email: this.formBuilder.control('', [Validators.required, Validators.pattern(this.emailPattern)]),\n      emailConfirmation: this.formBuilder.control('',[Validators.required, Validators.pattern(this.emailPattern)]),\n      \n      address: this.formBuilder.control('', [Validators.required, Validators.minLength(5)]),\n      number: this.formBuilder.control('', [Validators.required, Validators.pattern(this.numberPattern)]),\n      optionalAddress: this.formBuilder.control(''),\n      paymentOption: this.formBuilder.control('', [Validators.required])\n\n    }, {validators: OrderComponent.equalsTo, updateOn: 'blur'}) \n  }\n  // ngOnInit() {\n  //   this.orderForm = this.formBuilder.group({\n  //     name: this.formBuilder.control('', [Validators.required, Validators.minLength(5)]),\n      \n  //     email: this.formBuilder.control('', [Validators.required, Validators.pattern(this.emailPattern)]),\n  //     emailConfirmation: this.formBuilder.control('',[Validators.required, Validators.pattern(this.emailPattern)]),\n      \n  //     address: this.formBuilder.control('', [Validators.required, Validators.minLength(5)]),\n  //     number: this.formBuilder.control('', [Validators.required, Validators.pattern(this.numberPattern)]),\n  //     optionalAddress: this.formBuilder.control(''),\n  //     paymentOption: this.formBuilder.control('', [Validators.required])\n\n  //   }, {validators: OrderComponent.equalsTo}) \n  // }\n\n\n\n\n\n  //  method to check email are identical\n  static equalsTo(group: AbstractControl): {[key:string]: boolean} {\n    const email = group.get('email');\n    const emailConfirmation = group.get('emailConfirmation');\n\n    // CHecking if they are existent within Form group\n    if (!email || !emailConfirmation) {\n      return undefined\n    }\n    if (email.value !== emailConfirmation.value) {\n      return {emailNotMatch: true}\n    }\n    return undefined;\n  }\n\n  itemsValue(): number {\n    return this.orderService.itemsValue();\n  }\n\n  cartItems(): CartItem[] {\n    return this.orderService.cartItems();\n  }\n\n  increaseQty(item: CartItem) {\n    this.orderService.increaseQty(item)\n  }\n\n  decreaseQty(item: CartItem) {\n    this.orderService.decreaseQty(item);\n  }\n\n  remove(item: CartItem) {\n    this.orderService.remove(item);\n  }\n\n  isOrderCompleted():boolean {\n    return this.orderId !== undefined;\n  }\n\n  checkOrder(order: Order) {\n    order.orderItems = this.cartItems().map((item:CartItem) => new OrderItem(item.quantity, item.menuItem.id))\n    this.orderService.checkOrder(order).pipe(tap((orderId: string) => {\n      this.orderId = orderId\n    }))\n    .subscribe((orderId: string) => {\n      this.router.navigate(['/order-summary']); // navigate to order-summary page (last page)\n      console.log(`Compra concluida: ${orderId}`);\n      this.orderService.clear();\n    });    \n  }\n}\n","class Order {\n    constructor(\n        public address: string,\n        public number: number,\n        public optionalAddress: string,\n        public paymentOption: string,\n        public orderItems: OrderItem[] = [],\n        public id?: string\n        ) { \n    }\n}\n\nclass OrderItem {\n    constructor(public quantity:number, public menuId: string ) {}\n}\n\nexport {Order, OrderItem};","import { NgModule } from \"@angular/core\";\nimport { OrderComponent } from \"./order.component\";\nimport { OrderItemsComponent } from \"./order-items/order-items.component\";\nimport { DeliveryCostsComponent } from \"./delivery-costs/delivery-costs.component\";\nimport { SharedModule } from \"app/shared/shared.module\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { LeaveOrderGuard } from \"./leave-order.guard\";\n\nconst ROUTES: Routes = [\n    {path: '', component: OrderComponent, canDeactivate: [LeaveOrderGuard]}\n]\n\n@NgModule({\n    declarations:[ OrderComponent, OrderItemsComponent, DeliveryCostsComponent ],\n    imports: [ SharedModule, RouterModule.forChild(ROUTES) ]\n})\n\nexport class OrderModule {\n\n}"],"sourceRoot":""}